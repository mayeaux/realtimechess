doctype 5
html
  head
    - if (typeof(title) !== 'undefined')
      title #{title} | Reti Chess
    - else
      title Reti Chess
    meta(charset='utf-8')
    meta(name='robots', content='index, follow')
    meta(itemprop='name=Reti Chess')
    meta(name='description', content='Reti Chess is a lightweight real-time chess app built in Node.js with use of Express framework and Socket.IO')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='shortcut icon', href='/images/logo.png')
    link(rel='stylesheet', href='/stylesheets/style.css')
    script(type='text/javascript', src='js/prettify/jquery.min.js')
    script(type='text/javascript', src='js/prettify/loadAndFilter.js')
    script(type='text/javascript', src='js/prettify/prettify.js')

    script(type='text/javascript', src='/socket.io/socket.io.js')
    script(src='/socket.io/socket.io.js')
    script(type='text/javascript', src='/easyrtc/easyrtc.js')
    script(type='text/javascript')
      var selfEasyrtcid = "";


      function connect() {
          easyrtc.setVideoDims(640,480);
          easyrtc.setRoomOccupantListener(convertListToButtons);
          easyrtc.easyApp("easyrtc.audioVideoSimple", "selfVideo", ["callerVideo"], loginSuccess, loginFailure);
       }


      function clearConnectList() {
          var otherClientDiv = document.getElementById('otherClients');
          while (otherClientDiv.hasChildNodes()) {
              otherClientDiv.removeChild(otherClientDiv.lastChild);
          }
      }


      function convertListToButtons (roomName, data, isPrimary) {
          clearConnectList();
          var otherClientDiv = document.getElementById('otherClients');
          for(var easyrtcid in data) {
              var button = document.createElement('button');
              button.onclick = function(easyrtcid) {
                  return function() {
                      performCall(easyrtcid);
                  };
              }(easyrtcid);

              var label = document.createTextNode(easyrtc.idToName(easyrtcid));
              button.appendChild(label);
              otherClientDiv.appendChild(button);
          }
      }


      function performCall(otherEasyrtcid) {
          easyrtc.hangupAll();

          var successCB = function() {};
          var failureCB = function() {};
          easyrtc.call(otherEasyrtcid, successCB, failureCB);
      }


      function loginSuccess(easyrtcid) {
          selfEasyrtcid = easyrtcid;
          document.getElementById("iam").innerHTML = "I am " + easyrtc.cleanId(easyrtcid);
      }


      function loginFailure(errorCode, message) {
          easyrtc.showError(errorCode, message);
      }


    script(type='text/javascript')
      $token = '#{token}';
      $time = #{time};
      $increment = #{increment};
    link(href='https://fonts.googleapis.com/css?family=Cherry+Swash|Open+Sans:400,600', rel='stylesheet', type='text/css')
    //if IE
      script(src='http://html5shiv.googlecode.com/svn/trunk/html5.js')
  body(onload="connect();")
    #modal-mask
      p
        strong Esc:
        |  OK
        br
        strong Enter:
        |  OK
      #modal-window
        p#modal-message Message.
        a#modal-ok.button(href='#') OK
    #offer-mask
      p
        strong Esc:
        |  Decline
        br
        strong Enter:
        |  Accept
      #offer-window
        p#offer-message Offer.
        a#offer-accept.button(href='#') Accept
        a#offer-decline.button.button--red(href='#') Decline

    #container_wrapper.clearfix
      #container.clearfix
        header.clearfix.playheader
          ul#clock
            li.white
            li.black
          span#game-type
          a.button.playbutton(href='/') New game
          a.button.button--red.resign Resign
          a.button.button--red.rematch Rematch

        audio(id='moveSnd', preload='auto')
          source(src='/sounds/move.mp3')
          source(src='/sounds/move.ogg')
        audio(id='messageSnd', preload='auto')
          source(src='/sounds/message.mp3')

        #board_moves_wrapper.clearfix
          label(id='sounds_label')
            input(type='checkbox', id='sounds')
            |  Enable sounds
          #board_wrapper
            #captured-pieces
              ul.w
              ul.b
            table.chess_board.white
              tr
                td.A8(data-id='A8', draggable='true')
                  a.black.rook(draggable='true') &#9820;
                td.B8(data-id='B8', draggable='true')
                  a.black.knight(draggable='true') &#9822;
                td.C8(data-id='C8', draggable='true')
                  a.black.bishop(draggable='true') &#9821;
                td.D8(data-id='D8', draggable='true')
                  a.black.king(draggable='true') &#9819;
                td.E8(data-id='E8', draggable='true')
                  a.black.queen(draggable='true') &#9818;
                td.F8(data-id='F8', draggable='true')
                  a.black.bishop(draggable='true') &#9821;
                td.G8(data-id='G8', draggable='true')
                  a.black.knight(draggable='true') &#9822;
                td.H8(data-id='H8', draggable='true')
                  a.black.rook(draggable='true') &#9820;
              tr
                td.A7(data-id='A7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.B7(data-id='B7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.C7(data-id='C7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.D7(data-id='D7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.E7(data-id='E7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.F7(data-id='F7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.G7(data-id='G7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.H7(data-id='H7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
              tr
                td.A6(data-id='A6')
                td.B6(data-id='B6')
                td.C6(data-id='C6')
                td.D6(data-id='D6')
                td.E6(data-id='E6')
                td.F6(data-id='F6')
                td.G6(data-id='G6')
                td.H6(data-id='H6')
              tr
                td.A5(data-id='A5')
                td.B5(data-id='B5')
                td.C5(data-id='C5')
                td.D5(data-id='D5')
                td.E5(data-id='E5')
                td.F5(data-id='F5')
                td.G5(data-id='G5')
                td.H5(data-id='H5')
              tr
                td.A4(data-id='A4')
                td.B4(data-id='B4')
                td.C4(data-id='C4')
                td.D4(data-id='D4')
                td.E4(data-id='E4')
                td.F4(data-id='F4')
                td.G4(data-id='G4')
                td.H4(data-id='H4')
              tr
                td.A3(data-id='A3')
                td.B3(data-id='B3')
                td.C3(data-id='C3')
                td.D3(data-id='D3')
                td.E3(data-id='E3')
                td.F3(data-id='F3')
                td.G3(data-id='G3')
                td.H3(data-id='H3')
              tr
                td.A2(data-id='A2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.B2(data-id='B2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.C2(data-id='C2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.D2(data-id='D2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.E2(data-id='E2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.F2(data-id='F2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.G2(data-id='G2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.H2(data-id='H2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
              tr
                td.A1(data-id='A1', draggable='true')
                  a.white.rook(draggable='true') &#9814;
                td.B1(data-id='B1', draggable='true')
                  a.white.night(draggable='true') &#9816;
                td.C1(data-id='C1', draggable='true')
                  a.white.bishop(draggable='true') &#9815;
                td.D1(data-id='D1', draggable='true')
                  a.white.king(draggable='true') &#9813;
                td.E1(data-id='E1', draggable='true')
                  a.white.wife(draggable='true') &#9812;
                td.F1(data-id='F1', draggable='true')
                  a.white.bishop(draggable='true') &#9815;
                td.G1(data-id='G1', draggable='true')
                  a.white.night(draggable='true') &#9816;
                td.H1(data-id='H1', draggable='true')
                  a.white.rook(draggable='true') &#9814;
            table.chess_board.black(style='display: none;')
              tr
                td.H1(data-id='H1', draggable='true')
                  a.white.rook(draggable='true') &#9814;
                td.G1(data-id='G1', draggable='true')
                  a.white.night(draggable='true') &#9816;
                td.F1(data-id='F1', draggable='true')
                  a.white.bishop(draggable='true') &#9815;
                td.E1(data-id='E1', draggable='true')
                  a.white.king(draggable='true') &#9812;
                td.D1(data-id='D1', draggable='true')
                  a.white.queen(draggable='true') &#9813;
                td.C1(data-id='C1', draggable='true')
                  a.white.bishop(draggable='true') &#9815;
                td.B1(data-id='B1', draggable='true')
                  a.white.knight(draggable='true') &#9816;
                td.A1(data-id='A1', draggable='true')
                  a.white.rook(draggable='true') &#9814;
              tr
                td.H2(data-id='H2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.G2(data-id='G2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.F2(data-id='F2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.E2(data-id='E2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.D2(data-id='D2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.C2(data-id='C2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.B2(data-id='B2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
                td.A2(data-id='A2', draggable='true')
                  a.white.pawn(draggable='true') &#9817;
              tr
                td.H3(data-id='H3')
                td.G3(data-id='G3')
                td.F3(data-id='F3')
                td.E3(data-id='E3')
                td.D3(data-id='D3')
                td.C3(data-id='C3')
                td.B3(data-id='B3')
                td.A3(data-id='A3')
              tr
                td.H4(data-id='H4')
                td.G4(data-id='G4')
                td.F4(data-id='F4')
                td.E4(data-id='E4')
                td.D4(data-id='D4')
                td.C4(data-id='C4')
                td.B4(data-id='B4')
                td.A4(data-id='A4')
              tr
                td.H5(data-id='H5')
                td.G5(data-id='G5')
                td.F5(data-id='F5')
                td.E5(data-id='E5')
                td.D5(data-id='D5')
                td.C5(data-id='C5')
                td.B5(data-id='B5')
                td.A5(data-id='A5')
              tr
                td.H6(data-id='H6')
                td.G6(data-id='G6')
                td.F6(data-id='F6')
                td.E6(data-id='E6')
                td.D6(data-id='D6')
                td.C6(data-id='C6')
                td.B6(data-id='B6')
                td.A6(data-id='A6')
              tr
                td.H7(data-id='H7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.G7(data-id='G7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.F7(data-id='F7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.E7(data-id='E7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.D7(data-id='D7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.C7(data-id='C7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.B7(data-id='B7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
                td.A7(data-id='A7', draggable='true')
                  a.black.pawn(draggable='true') &#9823;
              tr
                td.H8(data-id='H8', draggable='true')
                  a.black.rook(draggable='true') &#9820;
                td.G8(data-id='G8', draggable='true')
                  a.black.knight(draggable='true') &#9822;
                td.F8(data-id='F8', draggable='true')
                  a.black.bishop(draggable='true') &#9821;
                td.E8(data-id='E8', draggable='true')
                  a.black.king(draggable='true') &#9818;
                td.D8(data-id='D8', draggable='true')
                  a.black.queen(draggable='true') &#9819;
                td.C8(data-id='C8', draggable='true')
                  a.black.bishop(draggable='true') &#9821;
                td.B8(data-id='B8', draggable='true')
                  a.black.knight(draggable='true') &#9822;
                td.A8(data-id='A8', draggable='true')
                  a.black.rook(draggable='true') &#9820;

          table#moves.clearfix
            thead
              tr
                th Table of moves
            tbody
              tr

          span.promotion
            label(id='for_promotion') Promotion:
              select(id='promotion')
                option(value='q', selected) Queen
                option(value='r') Rook
                option(value='n') Knight
                option(value='b') Bishop

          span.feedback.whitefeedback
            span.feedback-move White to move.
            span.feedback-status

        #demoContainer
          #connectControls
            #iam Not yet connected...
            |
            br
            |
            strong Connected users:
            |
            #otherClients
          |
          #videos
            div
              video#callerVideo(autoplay='autoplay')
            video#selfVideo.easyrtcMirror(autoplay='autoplay', muted='muted', volume='0')
            |

        br(style='clear:both;')
        |
        hr


    script(type='text/javascript', src='/javascripts/jquery.js')
    script(type='text/javascript', src='/javascripts/jquery.stickyFooter.js')
    script(type='text/javascript', src='/javascripts/chess.js')
    script(type='text/javascript', src='/javascripts/app.js')
    script(type='text/javascript', src='/javascripts/play.js')
